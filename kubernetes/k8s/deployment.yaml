# desiredReplicas = ceil[currentReplicas * ( currentMetricValue / desiredMetricValue )]

apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: app-desafio-devops
  namespace: desafio-devops
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: app-desafio-devops
  minReplicas: 1
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: CPU
      targetAverageUtilization: 50

---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: app-desafio-devops
  namespace: desafio-devops
  labels:
    app: app_node
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: app_node
    spec:
      securityContext:
        runAsNonRoot: true
      containers:
        ########### Container da App ###########
        - name: app
          image: gcr.io/idwall-sandbox/node-app:0.4
          imagePullPolicy: Always
          command: ["npm", "start"]
          ports:
          - containerPort: 3000

          readinessProbe: # Read-Check
            tcpSocket:
              port: 3000
            initialDelaySeconds: 5
            periodSeconds: 10
          livenessProbe: #Health-Check
            tcpSocket:
              port: 3000
            initialDelaySeconds: 15
            periodSeconds: 20

          # resources:
          #   limits:
          #     cpu: 100m
          #     memory: 70Mi
          #   requests:
          #     cpu: 60m
          #     memory: 60Mi

          env:
          - name: NAME
            value: "Bruno S. Brasil"
          - name: NUMBER
            value: "5000000"

          volumeMounts:
            - name: timezone-config
              mountPath: /etc/localtime
        #########################################

      volumes:
      - name: timezone-config
        hostPath:
           path: /usr/share/zoneinfo/America/Sao_Paulo
